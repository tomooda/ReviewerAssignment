module 査読者割当exports alldefinitionstypes    名称型 = seq1 of char;    研究者型 = token;    論文型 :: タイトル : 名称型 著者 : set1 of 研究者型;    査読希望型 =        <査読したい> | <査読してもよい> | <査読したくない> | <利益相反>;    査読割当表型 = map 論文型 to set of 研究者型;values    論文あたり査読者数初期値 = 3;    査読候補者希望 =        {<査読したい>, <査読してもよい>, <査読したくない>, <利益相反>};state 査読者割当 of    論文あたり査読者数 : nat1    コスト表 : map 査読希望型 to real    査読者リスト : set of 研究者型    査読論文リスト : set of 論文型    希望表 : map 研究者型 to (map 論文型 to 査読希望型)    割当表 : 査読割当表型inv mk_査読者割当(    -, 仮コスト表, 仮査読者リスト, 仮査読論文リスト, 仮希望表, 仮割当表) ==    dunion (rng 仮割当表) subset 仮査読者リストinit 初期状態 ==    初期状態    = mk_査読者割当(論文あたり査読者数初期値, {|->}, {}, {}, {|->}, {|->})endoperations    利益相反リスト : 査読割当表型 ==> set of 論文型    利益相反リスト(仮割当表) ==        return {論文 | 論文 in set dom 仮割当表                & exists 査読者 in set 仮割当表(論文) & 利益相反(論文, 査読者)};    査読者不足リスト : 査読割当表型 ==> set of 論文型    査読者不足リスト(仮割当表) ==        return {論文 | 論文 in set dom 仮割当表                & card 仮割当表(論文) < 論文あたり査読者数};    最大査読論文リスト数差 : 査読割当表型 ==> nat    最大査読論文リスト数差(仮割当表) ==        let            査読数リスト =                {査読論文リスト数(仮割当表, 査読者) | 査読者 in set 査読者リスト}        in            return if 査読数リスト = {} then 0 else 最大値(査読数リスト) - 最小値(査読数リスト);functions    査読者不足 : set of 研究者型 * nat1 -> bool    査読者不足(査読者リスト, 査読者数) == card 査読者リスト < 査読者数;operations    pure 利益相反 : 論文型 * 研究者型 ==> bool    利益相反(論文, 査読者) ==        return 査読者 in set 論文.著者            or (査読者 in set dom 希望表 and 論文 in set dom 希望表(査読者))            and 希望表(査読者)(論文) = <利益相反>;    希望 : 研究者型 * 論文型 ==> [査読希望型]    希望(査読者, 論文) ==        (if            査読者 in set dom 希望表 and 論文 in set dom 希望表(査読者)        then            return 希望表(査読者)(論文);        return nil);    査読論文リスト数 : 査読割当表型 * 研究者型 ==> nat    査読論文リスト数(仮割当表, 査読者) ==        return card {論文 | 論文 in set dom 仮割当表 & 査読者 in set 仮割当表(論文)};functions    最大値 : set1 of real -> real    最大値(xs) == iota x in set xs & (forall y in set xs & y <= x);    最小値 : set1 of real -> real    最小値(xs) == iota x in set xs & (forall y in set xs & x <= y);end 査読者割当